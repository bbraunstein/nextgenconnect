---
apiVersion: v1
kind: Namespace
metadata:
  name: nextgenconnect
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret-mirth
  namespace: nextgenconnect
  labels:
    app: mysql
type: kubernetes.io/basic-auth
stringData:
  username: mirth
  password: M!rth53cr3t
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret-root
  namespace: nextgenconnect
  labels:
    app: mysql
type: kubernetes.io/basic-auth
stringData:
  username: root
  password: sUp3R53cr3T!
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: nextgenconnect
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: "mysql"
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - image: mysql:8.0
        name: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-pv
          mountPath: /var/lib/mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret-root
              key: password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret-mirth
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret-mirth
              key: password
        - name: MYSQL_DATABASE
          value: mirthdb
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: mysql-pv
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "gp2"
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mysql
  name: mysql
  namespace: nextgenconnect
spec:
  ports:
  - port: 3306
    protocol: TCP
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextgenconnect
  namespace: nextgenconnect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextgenconnect
  template:
    metadata:
      labels:
        app: nextgenconnect
    spec:
      containers:
      - name: nextgenconnect
        image: docker.io/nextgenhealthcare/connect:4.0
        ports:
        - name: https
          containerPort: 8443
        - name: http-listener
          containerPort: 9000
        env:
          - name: DATABASE
            value: mysql
          - name: DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                name: mysql-secret-mirth
                key: username
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret-mirth
                key: password
          - name: DATABASE_URL
            value: jdbc:mysql://mysql:3306/mirthdb
          - name: DATABASE_MAX_CONNECTIONS
            value: "20"
          - name: VMOPTIONS
            value: -Xmx512m
          - name: ALLOW_INSECURE
            value: "true"
          - name: DATABASE_MAX_RETRY
            value: "2"
          - name: DATABASE_MAX_RETRY_WAIT
            value: "10000"
          - name: _MP_SERVER_ID_EPHEMERAL
            value: "true"
          - name: _MP_SERVER_STARTUPDEPLOY
            value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: nextgenconnect
  namespace: nextgenconnect
spec:
  selector:
    app: nextgenconnect
  ports:
    - name: https
      port: 8443
      targetPort: 8443
      protocol: TCP
    - name: http-listener
      port: 9000
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nextgenconnect
  namespace: nextgenconnect
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"                              # Required. Instructs Traefik to route HTTPS request and terminate SSL connections
    kubernetes.io/tls-acme: "true"                                                # Required. Instructs cert-manager to automate TLS issuance.
    cert-manager.io/common-name: nextgenconnect.example.com      # Required. Certificate must contain a Common Name (CN).
    external-dns.alpha.kubernetes.io/target: traefik.example.com # Required. Instructs external-dns to create a CNAME to traefik ingress router entrypoint.
spec:
  rules:
    - host: nextgenconnect.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nextgenconnect
                port:
                  number: 8443
          - path: /api/v1/
            pathType: Prefix
            backend:
              service:
                name: nextgenconnect
                port:
                  number: 9000
  tls:
  - secretName: nextgenconnect-tls
    hosts:
      - nextgenconnect.example.com # Required. Instructs Ingress controller to secure the channel. `hosts` in the `tls` section need to explicitly match the `host` in the `rules` section.
